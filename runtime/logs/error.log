2018-06-17 20:47:17：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:47:51：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:48:20：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:48:52：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:50:09：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:52:52：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:53:17：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:53:17：<?xml version="1.0" encoding="utf-8"?>
<methodCall>
<methodName>metaWeblog.editPost</methodName>
<params>
    <param>
        <value>
        <string>9193286</string>
        </value>
    </param>
    <param>
        <value>
        <string>jueze</string>
        </value>
    </param>
    <param>
        <value>
        <string>yi877900230!</string>
        </value>
    </param>
    <param>
       <value>
        <struct>
            <member>
              <name>title</name>
              <value>
                <string>docker容器修改hosts文件，重启失效问题解决</string>
              </value>
            </member>
            <member>
              <name>description</name>
              <value>
                <string>### docker容器修改hosts文件
搜了一大批资料，有说需要在docker run --hosts...改；dockerfile改；有点麻烦，下面方案比较好：

参照docker吧（https://tieba.baidu.com/p/4295556808?red_tag=0157001827）的解决方案。运用如下命令可写入 hosts：
```
docker exec &lt;容器Id&gt; /bin/sh -c &quot;echo 101.37.113.127 www.cnblogs.com &gt;&gt; /etc/hosts&quot;
```

为避免重启失效，放入开启启动项（已php容器为例）：
```
$ cd /etc/profile.d/
$ vi hosts.sh
//输入命令,保存
docker exec php7-dev /bin/sh -c &quot;echo 101.37.113.127 www.cnblogs.com &gt;&gt; /etc/hosts&quot;
```

重启服务器，可以看到容器 php7-dev,hosts文件已有添加内容。

注意docker必须在root用户才会执行，所以要做下切换,或者以 root 权限运行服务器。

</string>
              </value>
            </member>
            <member>
                <name>categories</name>
                <value>
                  <array>
                    <data>
                        <value>
                            <string>[Markdown]</string>
                        </value>
                     </data>
                   </array>
                  </value>
            </member>
        </struct>
       </value>
    </param>
    <param>
       <value>
        <boolean>1</boolean>
       </value>
    </param>
</params></methodCall>

2018-06-17 20:54:07：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:55:47：array (
  0 => 
  array (
    'queueId' => 19,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => 'Request from client does not contain valid XML.',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:55:47：<?xml version="1.0" encoding="utf-8"?>
<methodCall>
<methodName>metaWeblog.editPost</methodName>
<params>
    <param>
        <value>
        <string>9193286</string>
        </value>
    </param>
    <param>
        <value>
        <string>jueze</string>
        </value>
    </param>
    <param>
        <value>
        <string>yi877900230!</string>
        </value>
    </param>
    <param>
       <value>
        <struct>
            <member>
              <name>title</name>
              <value>
                <string>docker容器修改hosts文件，重启失效问题解决</string>
              </value>
            </member>
            <member>
              <name>description</name>
              <value>
                <string>### docker容器修改hosts文件
搜了一大批资料，有说需要在docker run --hosts...改；dockerfile改；有点麻烦，下面方案比较好：

参照docker吧（https://tieba.baidu.com/p/4295556808?red_tag=0157001827）的解决方案。运用如下命令可写入 hosts：
```
docker exec &lt;容器Id&gt; /bin/sh -c &quot;echo 101.37.113.127 www.cnblogs.com &gt;&gt; /etc/hosts&quot;
```

为避免重启失效，放入开启启动项（已php容器为例）：
```
$ cd /etc/profile.d/
$ vi hosts.sh
//输入命令,保存
docker exec php7-dev /bin/sh -c &quot;echo 101.37.113.127 www.cnblogs.com &gt;&gt; /etc/hosts&quot;
```

重启服务器，可以看到容器 php7-dev,hosts文件已有添加内容。

注意docker必须在root用户才会执行，所以要做下切换,或者以 root 权限运行服务器。

</string>
              </value>
            </member>
            <member>
                <name>categories</name>
                <value>
                  <array>
                    <data>
                        <value>
                            <string>[Markdown]</string>
                        </value>
                     </data>
                   </array>
                  </value>
            </member>
        </struct>
       </value>
    </param>
    <param>
       <value>
        <boolean>1</boolean>
       </value>
    </param>
</params></methodCall>

2018-06-17 20:57:50：array (
  0 => 
  array (
    'queueId' => 20,
    'blogId' => 17,
    'action' => 2,
    'publishStatus' => 0,
    'response' => '',
    'createtime' => '2018-06-17',
    'updatetime' => '2018-06-17',
    'blogType' => 6,
  ),
)

2018-06-17 20:57:50：<?xml version="1.0" encoding="utf-8"?>
<methodCall>
<methodName>metaWeblog.editPost</methodName>
<params>
    <param>
        <value>
        <string>9193286</string>
        </value>
    </param>
    <param>
        <value>
        <string>jueze</string>
        </value>
    </param>
    <param>
        <value>
        <string>yi877900230!</string>
        </value>
    </param>
    <param>
       <value>
        <struct>
            <member>
              <name>title</name>
              <value>
                <string>docker容器修改hosts文件，重启失效问题解决</string>
              </value>
            </member>
            <member>
              <name>description</name>
              <value>
                <string>### docker容器修改hosts文件
搜了一大批资料，有说需要在docker run --hosts...改；dockerfile改；有点麻烦，下面方案比较好：

参照docker吧（https://tieba.baidu.com/p/4295556808?red_tag=0157001827）的解决方案。运用如下命令可写入 hosts：
```
docker exec &lt;容器Id&gt; /bin/sh -c &quot;echo 101.37.113.127 www.cnblogs.com &gt;&gt; /etc/hosts&quot;
```

为避免重启失效，放入开启启动项（已php容器为例）：
```
$ cd /etc/profile.d/
$ vi hosts.sh
//输入命令,保存
docker exec php7-dev /bin/sh -c &quot;echo 101.37.113.127 www.cnblogs.com &gt;&gt; /etc/hosts&quot;
```

重启服务器，可以看到容器 php7-dev,hosts文件已有添加内容。

注意docker必须在root用户才会执行，所以要做下切换,或者以 root 权限运行服务器。

</string>
              </value>
            </member>
            <member>
                <name>categories</name>
                <value>
                  <array>
                    <data>
                        <value>
                            <string>[Markdown]</string>
                        </value>
                     </data>
                   </array>
                  </value>
            </member>
        </struct>
       </value>
    </param>
    <param>
       <value>
        <boolean>1</boolean>
       </value>
    </param>
</params></methodCall>

